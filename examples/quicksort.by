extern func rand = -> Int
extern func puts = String -> Void
extern func printf = String, Int -> Void
extern func list_has_next = List[Int] -> Bool
extern func is_null = List[Int] -> Bool

func main = args: List[String] -> Int {
    let list = build_list(20, 128);
    let list4 = printlist(list);
    let sorted = quickSort(list4);
    printlist(sorted);
    0
}

func build_list = n: Int, max: Int -> List[Int] {
    if n == 0 { 
        rand() % max : Null
    } else {
        rand() % max : build_list(n-1, max)
    }
}


func quickSort = list: List[Int] -> List[Int] {
    if !list_has_next(list) {
        list : Null
    }
    else {
	    let pivot : tail = list;
        sortedHelper(tail, Null, Null, pivot)
    }
}


func sortedHelper = list: List[Int], lower: List[Int], heigher: List[Int], pivot: Int -> List[Int] {
    if is_null(list) {
        quickSort(lower) : (pivot : quickSort( heigher))
    }
    else {
        let value : tail = list;
        if value >= pivot {
            sortedHelper(tail, lower, (value : heigher), pivot)
        } else {
            sortedHelper(tail, (value : lower), heigher, pivot)
        }
    }
}


func printlist = list: List[Int] -> List[Int] {
    if is_null(list) {
        puts(";");
        list
    } else {
        let head :tail = list;
        printf("%d, ", head);
        head : printlist(tail)
    }
}
